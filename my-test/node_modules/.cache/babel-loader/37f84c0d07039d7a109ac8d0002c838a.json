{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Poovt\\\\code\\\\GitHub\\\\kingpowertest\\\\my-test\\\\src\\\\App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Header from './component/Header';\nimport Footer from './component/Footer';\nimport FormInput from './component/FormInput';\nimport Edit from './component/Edit';\nimport List from './component/List';\nimport { useDispatch, useSelector } from 'react-redux';\n\nfunction App(props) {\n  const {\n    user\n  } = useSelector(state => state);\n  let numbers = [1, 4, 9];\n  let roots = numbers.map(function (num) {\n    return Math.sqrt(num);\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 8\n    }\n  }, user !== null ? user.map(users => users.editing != true ? /*#__PURE__*/React.createElement(FormInput, {\n    key: users.id,\n    userdata: users,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }) : '') : '', /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  })));\n} // const mapStateToProps = (state) =>{\n//   return{\n//       user: state\n//   }\n// } \n\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Poovt/code/GitHub/kingpowertest/my-test/src/App.js"],"names":["React","Header","Footer","FormInput","Edit","List","useDispatch","useSelector","App","props","user","state","numbers","roots","map","num","Math","sqrt","users","editing","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAO,WAAP;AACA,OAAO,sCAAP;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,SAASC,WAAT,EAAuBC,WAAvB,QAAyC,aAAzC;;AAGA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAClB,QAAM;AAAEC,IAAAA;AAAF,MAAWH,WAAW,CAAEI,KAAD,IAAWA,KAAZ,CAA5B;AACA,MAAIC,OAAO,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAd;AACA,MAAIC,KAAK,GAAGD,OAAO,CAACE,GAAR,CAAY,UAASC,GAAT,EAAc;AAClC,WAAOC,IAAI,CAACC,IAAL,CAAUF,GAAV,CAAP;AACH,GAFW,CAAZ;AAGA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEG;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAeGL,IAAI,KAAK,IAAT,GACEA,IAAI,CAACI,GAAL,CAAUI,KAAD,IACNA,KAAK,CAACC,OAAN,IAAiB,IAAlB,gBACE,oBAAC,SAAD;AAAW,IAAA,GAAG,EAAED,KAAK,CAACE,EAAtB;AAA0B,IAAA,QAAQ,EAAEF,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,GAEE,EAHJ,CADF,GAME,EArBL,eAuBG,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvBH,CAFH,CADF;AAgCD,C,CACD;AACA;AACA;AACA;AACA;;;AAEA,eAAeV,GAAf","sourcesContent":["import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Header from './component/Header';\r\nimport Footer from './component/Footer';\r\nimport FormInput from './component/FormInput';\r\nimport Edit from './component/Edit'\r\nimport List from './component/List';\r\nimport { useDispatch , useSelector} from 'react-redux'; \r\n\r\n\r\nfunction App(props) {\r\n  const { user } = useSelector((state) => state); \r\n  let numbers = [1, 4, 9]\r\n  let roots = numbers.map(function(num) {\r\n      return Math.sqrt(num)\r\n  })\r\n  return ( \r\n    <div> \r\n        <Header />\r\n       <div className=\"container\"> \r\n          {/* \r\n            {                \r\n          user.filter(users => users.editing==true).map((users) => (         \r\n          (users.editing == true) \r\n          ? <FormInput key={users.id} userdata={users} />      \r\n          : <FormInput /> \r\n          )) \r\n          }   \r\n          user.filter(users => users.editing==true).map(filteredName => (\r\n              // console.log(filteredName)    \r\n              <FormInput key={filteredName.id} userdata={filteredName} />  \r\n          ))   \r\n          */} \r\n          {\r\n          user !== null\r\n          ? user.map((users) => (\r\n              (users.editing != true)\r\n              ? <FormInput key={users.id} userdata={users} />  \r\n              : '' \r\n          ))  \r\n          : '' \r\n          }  \r\n          <List />\r\n\r\n       </div>\r\n        \r\n    </div>\r\n  );\r\n}\r\n// const mapStateToProps = (state) =>{\r\n//   return{\r\n//       user: state\r\n//   }\r\n// } \r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}