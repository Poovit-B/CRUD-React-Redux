{"ast":null,"code":"const initialState = {\n  user: []\n};\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case 'ADD_DATA':\n      return { ...state,\n        user: [action.payload, ...state.user]\n      };\n    //return [...state, user: state.concat([action.payload])\n\n    case 'DELETE_DATA':\n      return { ...state,\n        user: state.user.filter(users => users.id !== action.payload)\n      };\n\n    case 'MULTI_DELETE_DATA':\n      action.payload.filter(ra => {\n        return { ...state,\n          user: state.user.filter(users => users.id !== ra)\n        };\n      });\n      console.log(state.user);\n    // state.user = state.user.filter((users) => {\n    //     return (users.id);\n    // }, new Set(action.payload.map(users => users.id)));\n    // return{\n    //     ...state,\n    //     user : state.user\n    // } \n    // return {\n    //     ...state,\n    //     user: state.user.filter((users)=>users.id !== action.payload[0])  \n    // }\n\n    case 'EDIT_DATA':\n      return { ...state,\n        user: state.user.map(users => users.id === action.payload ? { ...users,\n          editing: !users.editing\n        } : users)\n      };\n\n    case 'UPDATE_DATA':\n      console.log(action.payload.user_firstname);\n      return { ...state,\n        user: state.user.map(users => {\n          if (users.id === action.payload.id) {\n            return { ...users,\n              user_title: action.payload.user_title,\n              user_firstname: action.payload.user_firstname,\n              user_lastname: action.payload.user_lastname,\n              user_birthday: action.payload.user_birthday,\n              user_nationality: action.payload.user_nationality,\n              user_citizenID: action.payload.user_citizenID,\n              user_gender: action.payload.user_gender,\n              user_phoneType: action.payload.user_phoneType,\n              user_mobliephone: action.payload.user_mobliephone,\n              user_passportNo: action.payload.user_passportNo,\n              user_salary: action.payload.user_salary,\n              editing: !users.editing\n            };\n          } else {\n            return users;\n          }\n        })\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:/Users/Poovt/code/GitHub/kingpowertest/my-test/src/reducer/FormReducer.js"],"names":["initialState","user","state","action","type","payload","filter","users","id","ra","console","log","map","editing","user_firstname","user_title","user_lastname","user_birthday","user_nationality","user_citizenID","user_gender","user_phoneType","user_mobliephone","user_passportNo","user_salary"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE;AADW,CAArB;AAIA,gBAAe,CAACC,KAAK,GAAGF,YAAT,EAAuBG,MAAvB,KAAkC;AAG7C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,UAAL;AACI,aAAO,EACH,GAAGF,KADA;AAEHD,QAAAA,IAAI,EAAE,CAACE,MAAM,CAACE,OAAR,EAAgB,GAAGH,KAAK,CAACD,IAAzB;AAFH,OAAP;AAIJ;;AACA,SAAK,aAAL;AACI,aAAO,EACH,GAAGC,KADA;AAEHD,QAAAA,IAAI,EAAEC,KAAK,CAACD,IAAN,CAAWK,MAAX,CAAmBC,KAAD,IAASA,KAAK,CAACC,EAAN,KAAaL,MAAM,CAACE,OAA/C;AAFH,OAAP;;AAIJ,SAAK,mBAAL;AACIF,MAAAA,MAAM,CAACE,OAAP,CAAeC,MAAf,CAAuBG,EAAD,IAAQ;AAC1B,eAAO,EACH,GAAGP,KADA;AAEHD,UAAAA,IAAI,EAAIC,KAAK,CAACD,IAAN,CAAWK,MAAX,CAAmBC,KAAD,IAASA,KAAK,CAACC,EAAN,KAAaC,EAAxC;AAFL,SAAP;AAIH,OALD;AAMAC,MAAAA,OAAO,CAACC,GAAR,CAAYT,KAAK,CAACD,IAAlB;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACJ,SAAK,WAAL;AACI,aAAO,EACH,GAAGC,KADA;AAEHD,QAAAA,IAAI,EAAGC,KAAK,CAACD,IAAN,CAAWW,GAAX,CAAgBL,KAAD,IAASA,KAAK,CAACC,EAAN,KAAaL,MAAM,CAACE,OAApB,GAC7B,EAAC,GAAGE,KAAJ;AAAUM,UAAAA,OAAO,EAAG,CAACN,KAAK,CAACM;AAA3B,SAD6B,GAE7BN,KAFK;AAFJ,OAAP;;AAOJ,SAAK,aAAL;AACIG,MAAAA,OAAO,CAACC,GAAR,CAAYR,MAAM,CAACE,OAAP,CAAeS,cAA3B;AACA,aAAO,EACH,GAAGZ,KADA;AAEHD,QAAAA,IAAI,EAAGC,KAAK,CAACD,IAAN,CAAWW,GAAX,CAAgBL,KAAD,IAAS;AAC3B,cAAGA,KAAK,CAACC,EAAN,KAAaL,MAAM,CAACE,OAAP,CAAeG,EAA/B,EAAkC;AAC9B,mBAAM,EACF,GAAGD,KADD;AAEFQ,cAAAA,UAAU,EAAEZ,MAAM,CAACE,OAAP,CAAeU,UAFzB;AAGFD,cAAAA,cAAc,EAAEX,MAAM,CAACE,OAAP,CAAeS,cAH7B;AAIFE,cAAAA,aAAa,EAAEb,MAAM,CAACE,OAAP,CAAeW,aAJ5B;AAKFC,cAAAA,aAAa,EAAEd,MAAM,CAACE,OAAP,CAAeY,aAL5B;AAMFC,cAAAA,gBAAgB,EAAEf,MAAM,CAACE,OAAP,CAAea,gBAN/B;AAOFC,cAAAA,cAAc,EAAChB,MAAM,CAACE,OAAP,CAAec,cAP5B;AAQFC,cAAAA,WAAW,EAACjB,MAAM,CAACE,OAAP,CAAee,WARzB;AASFC,cAAAA,cAAc,EAAElB,MAAM,CAACE,OAAP,CAAegB,cAT7B;AAUFC,cAAAA,gBAAgB,EAAEnB,MAAM,CAACE,OAAP,CAAeiB,gBAV/B;AAWFC,cAAAA,eAAe,EAAEpB,MAAM,CAACE,OAAP,CAAekB,eAX9B;AAYFC,cAAAA,WAAW,EAAErB,MAAM,CAACE,OAAP,CAAemB,WAZ1B;AAaFX,cAAAA,OAAO,EAAC,CAACN,KAAK,CAACM;AAbb,aAAN;AAeH,WAhBD,MAgBK;AACD,mBAAON,KAAP;AACH;AACJ,SApBM;AAFJ,OAAP;;AAyBJ;AACI,aAAOL,KAAP;AApER;AAuEH,CA1ED","sourcesContent":["const initialState = {\r\n    user: [],\r\n}; \r\n\r\nexport default (state = initialState, action) => {\r\n\r\n\r\n    switch (action.type) {\r\n        case 'ADD_DATA':\r\n            return {  \r\n                ...state, \r\n                user: [action.payload,...state.user]\r\n            };\r\n        //return [...state, user: state.concat([action.payload])\r\n        case 'DELETE_DATA': \r\n            return {\r\n                ...state,\r\n                user: state.user.filter((users)=>users.id !== action.payload)  \r\n            }\r\n        case 'MULTI_DELETE_DATA': \r\n            action.payload.filter((ra) => {\r\n                return { \r\n                    ...state,\r\n                    user :  state.user.filter((users)=>users.id !== ra)\r\n                } \r\n            });\r\n            console.log(state.user)\r\n            // state.user = state.user.filter((users) => {\r\n            //     return (users.id);\r\n            // }, new Set(action.payload.map(users => users.id)));\r\n            \r\n            // return{\r\n            //     ...state,\r\n            //     user : state.user\r\n            // } \r\n            // return {\r\n            //     ...state,\r\n            //     user: state.user.filter((users)=>users.id !== action.payload[0])  \r\n            // }\r\n        case 'EDIT_DATA': \r\n            return {\r\n                ...state,\r\n                user : state.user.map((users)=>users.id === action.payload\r\n                ? {...users,editing : !users.editing}\r\n                : users     \r\n                )\r\n            }\r\n        case 'UPDATE_DATA': \r\n            console.log(action.payload.user_firstname)   \r\n            return { \r\n                ...state,\r\n                user : state.user.map((users)=>{\r\n                    if(users.id === action.payload.id){\r\n                        return{\r\n                            ...users,    \r\n                            user_title: action.payload.user_title,\r\n                            user_firstname: action.payload.user_firstname,\r\n                            user_lastname: action.payload.user_lastname,\r\n                            user_birthday: action.payload.user_birthday,\r\n                            user_nationality: action.payload.user_nationality,\r\n                            user_citizenID:action.payload.user_citizenID,\r\n                            user_gender:action.payload.user_gender,\r\n                            user_phoneType: action.payload.user_phoneType,\r\n                            user_mobliephone: action.payload.user_mobliephone,\r\n                            user_passportNo: action.payload.user_passportNo,\r\n                            user_salary: action.payload.user_salary,\r\n                            editing:!users.editing\r\n                        }\r\n                    }else{\r\n                        return users\r\n                    }\r\n                } \r\n                )\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}